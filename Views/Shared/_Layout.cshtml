@using Microsoft.AspNetCore.Identity
@using ClaimsProcessingSystem.Models.Identity
@inject SignInManager<ApplicationUser> SignInManager

<!DOCTYPE html>
<html lang="en" data-theme="light">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - WCPS</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">
                    <img src="~/images/logo.png" alt="WCPS Logo" />
                    <span>WCPS</span>
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        @{
                            var currentController = ViewContext.RouteData.Values["controller"]?.ToString();
                            var currentAction = ViewContext.RouteData.Values["action"]?.ToString();
                        }
                        <li class="nav-item">
                            <a class="nav-link @(currentController == "Home" ? "active" : "")" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>

                        @if (SignInManager.IsSignedIn(User))
                        {
                            @if (User.IsInRole("Manager"))
                            {
                                <li class="nav-item">
                                    <a class="nav-link @(currentController == "Admin" && currentAction == "Index" ? "active" : "")" asp-area="" asp-controller="Admin" asp-action="Index">Admin Claims</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link @(currentController == "Users" ? "active" : "")" asp-area="" asp-controller="Users" asp-action="Index">Manage Users</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link @(currentController == "Admin" && currentAction == "Reports" ? "active" : "")" asp-area="" asp-controller="Admin" asp-action="Reports">Reports</a>
                                </li>
                            }
                            <li class="nav-item">
                                <a class="nav-link @(currentController == "Claims" ? "active" : "")" asp-area="" asp-controller="Claims" asp-action="Index">My Claims</a>
                            </li>
                        }
                    </ul>
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>

    @{
        // This logic checks if we are on the homepage AND the user is logged out.
        var isHomePage = ViewContext.RouteData.Values["controller"]?.ToString() == "Home" &&
        ViewContext.RouteData.Values["action"]?.ToString() == "Index";
        var userIsLoggedIn = SignInManager.IsSignedIn(User);
    }

    @if (isHomePage && !userIsLoggedIn)
    {
        // If it's the logged-out homepage, render without a container to allow the hero section to be full-width.
        @RenderBody()
    }
    else
    {
        // For all other pages, use the standard container to keep the content neat.
        <div class="container">
            <main role="main" class="pb-3">
                @RenderBody()
            </main>
        </div>
    }

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
    <partial name="_Notification" />
</body>
</html>